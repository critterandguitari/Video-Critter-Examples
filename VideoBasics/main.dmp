
main.out:     file format elf32-littlearm
main.out
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x00004252 memsz 0x00004252 flags r-x
    LOAD off    0x00010000 vaddr 0x40000000 paddr 0x00004254 align 2**15
         filesz 0x00000008 memsz 0x00000008 flags rw-
    LOAD off    0x00010008 vaddr 0x40000008 paddr 0x40000008 align 2**15
         filesz 0x00000000 memsz 0x0000200c flags rw-
private flags = 0: [APCS-32] [FPA float format]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001564  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00002cee  00001564  00001564  00009564  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000008  40000000  00004254  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          0000200c  40000008  40000008  00010008  2**2
                  ALLOC
  4 .comment      00000048  00000000  00000000  00010008  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00010050  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000002ae  00000000  00000000  000100d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000008b3  00000000  00000000  0001037e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000031b  00000000  00000000  00010c31  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000278  00000000  00000000  00010f4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000314  00000000  00000000  000111c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002d9  00000000  00000000  000114d8  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 
00001564 l    d  .rodata	00000000 
40000000 l    d  .data	00000000 
40000008 l    d  .bss	00000000 
00000000 l    d  .comment	00000000 
00000000 l    d  .debug_aranges	00000000 
00000000 l    d  .debug_pubnames	00000000 
00000000 l    d  .debug_info	00000000 
00000000 l    d  .debug_abbrev	00000000 
00000000 l    d  .debug_line	00000000 
00000000 l    d  .debug_frame	00000000 
00000000 l    d  .debug_str	00000000 
00000000 l    d  *ABS*	00000000 
00000000 l    d  *ABS*	00000000 
00000000 l    d  *ABS*	00000000 
00000000 l     F .text	00000000 $a
00000024 l       .text	00000000 reset
000000f8 l       .text	00000000 loop
00000020 l       .text	00000000 fiq_addr
00000020 l     O .text	00000000 $d
00000024 l     F .text	00000000 $a
00000100 l       .text	00000000 PLLBASE
00000024 l       *ABS*	00000000 PLLCFG_VALUE
00000004 l       *ABS*	00000000 PLLCFG_OFFSET
00000001 l       *ABS*	00000000 PLLCON_PLLE
00000000 l       *ABS*	00000000 PLLCON_OFFSET
000000aa l       *ABS*	00000000 PLLFEED1
00000055 l       *ABS*	00000000 PLLFEED2
0000000c l       *ABS*	00000000 PLLFEED_OFFSET
00000048 l       .text	00000000 pll_loop
00000008 l       *ABS*	00000000 PLLSTAT_OFFSET
00000400 l       *ABS*	00000000 PLLSTAT_PLOCK
00000002 l       *ABS*	00000000 PLLCON_PLLC
00000064 l       .text	00000000 mam_init
00000104 l       .text	00000000 MAMBASE
00000002 l       *ABS*	00000000 MAMCR_VALUE
00000000 l       *ABS*	00000000 MAMCR_OFFSET
00000004 l       *ABS*	00000000 MAMTIM_VALUE
00000004 l       *ABS*	00000000 MAMTIM_OFFSET
00000078 l       .text	00000000 stacks_init
000000fc l       .text	00000000 STACK_START
00000011 l       *ABS*	00000000 FIQ_MODE
00000080 l       *ABS*	00000000 IRQ_DISABLE
00000040 l       *ABS*	00000000 FIQ_DISABLE
00000080 l       *ABS*	00000000 FIQ_STACK_SIZE
00000012 l       *ABS*	00000000 IRQ_MODE
00000080 l       *ABS*	00000000 IRQ_STACK_SIZE
00000013 l       *ABS*	00000000 SVC_MODE
00000080 l       *ABS*	00000000 SVC_STACK_SIZE
0000001b l       *ABS*	00000000 UND_MODE
00000010 l       *ABS*	00000000 UND_STACK_SIZE
00000017 l       *ABS*	00000000 ABT_MODE
00000010 l       *ABS*	00000000 ABT_STACK_SIZE
0000001f l       *ABS*	00000000 SYS_MODE
000000c0 l       .text	00000000 runtime_init
00000108 l       .text	00000000 data_source
0000010c l       .text	00000000 data_start
00000110 l       .text	00000000 data_end
000000cc l       .text	00000000 copy_data
00000114 l       .text	00000000 bss_start
00000118 l       .text	00000000 bss_end
000000e8 l       .text	00000000 clear_bss
000000fc l     O .text	00000000 $d
00000400 l       *ABS*	00000000 SYS_STACK_SIZE
00000000 l    df *ABS*	00000000 main.c
0000011c l     F .text	00000000 $a
00000000 l    df *ABS*	00000000 video.c
40000008 l     O .bss	00000000 $d
40000010 l       .bss	00000000 pixelCount
40000000 l     O .data	00000000 $d
00000670 l     F .text	00000000 $a
00000880 l     O .text	00000000 $d
000008a8 l     F .text	00000368 timer0ISR
00000884 l     F .text	00000000 $a
00000c00 l     O .text	00000000 $d
00000c10 l     F .text	00000000 $a
00000dd4 l     O .text	00000000 $d
00000000 l    df *ABS*	00000000 system.c
00000de0 l     F .text	00000000 $a
000010e8 l     F .text	00000008 __get_cpsr
000010f0 l     F .text	00000008 __set_cpsr
00000000 l    df *ABS*	00000000 graphics.c
00001134 l     F .text	00000000 $a
000011c0 l     O .text	00000000 $d
000011c8 l     F .text	00000000 $a
000012c4 l     O .text	00000000 $d
000012d0 l     F .text	00000000 $a
000013c8 l     O .text	00000000 $d
000013d4 l     F .text	00000000 $a
000014cc l     O .text	00000000 $d
000014d8 l     F .text	00000000 $a
00001560 l     O .text	00000000 $d
40000014 g     O .bss	00002000 imageArray
000012d0 g     F .text	00000104 put_char_arial24
00001104 g     F .text	00000030 UNDEF_Routine
00003508 g     O .rodata	00000060 arial24Width
00004254 g       *ABS*	00000000 _etext
00000e0c g     F .text	0000002c led_card_init
00001744 g     O .rodata	00000060 arial32Width
00001864 g     O .rodata	000015fc arial32
40000000 g     O .data	00000004 syncOn
40000004 g     O .data	00000004 syncOff
00002e60 g     O .rodata	00000060 arial16Width
00000e68 g     F .text	00000030 led_card
00001100 g     F .text	00000004 SWI_Routine
00001564 g     O .rodata	000001e0 characters
000017a4 g     O .rodata	000000c0 arial32Offset
00000884 g     F .text	00000024 video_stop
40002014 g       *ABS*	00000000 _ebss
000010fc g     F .text	00000004 FIQ_Routine
00000f60 g     F .text	00000028 get_char
00002ec0 g     O .rodata	000000c0 arial16Offset
40000008 g       .bss	00000000 _bss
00000000 g       .text	00000000 _start
00000de0 g     F .text	0000002c led_board_init
000014d8 g     F .text	0000008c put_char_small
00001134 g     F .text	00000094 put_pixel
000013d4 g     F .text	00000104 put_char_arial16
00003568 g     O .rodata	000000c0 arial24Offset
0000011c g     F .text	00000554 main
00000e98 g     F .text	00000068 delay_ms
00000f00 g     F .text	00000060 delay_ticks
00002f80 g     O .rodata	00000588 arial16
00001080 g     F .text	00000020 feed
00003628 g     O .rodata	00000c2a arial24
40000008 g     O .bss	00000004 lineCount
4000000c g     O .bss	00000004 imageVindex
000010f8 g     F .text	00000004 IRQ_Routine
00000c10 g     F .text	000001d0 fiq_handler
40000000 g       .data	00000000 _data
000010a0 g     F .text	00000024 enableIRQ
000011c8 g     F .text	00000004 get_pixel
40000008 g       *ABS*	00000000 _edata
40002014 g       *ABS*	00000000 _end
00000e38 g     F .text	00000030 led_board
000010c4 g     F .text	00000024 disableIRQ
00000f88 g     F .text	000000f8 Initialize
00000670 g     F .text	00000214 video_init
000011cc g     F .text	00000104 put_char_arial32


