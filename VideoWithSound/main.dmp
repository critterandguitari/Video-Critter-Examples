
main.out:     file format elf32-littlearm
main.out
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x000047ee memsz 0x000047ee flags r-x
    LOAD off    0x00010000 vaddr 0x40000000 paddr 0x000047f0 align 2**15
         filesz 0x00000018 memsz 0x00000018 flags rw-
    LOAD off    0x00010018 vaddr 0x40000018 paddr 0x40000018 align 2**15
         filesz 0x00000000 memsz 0x00002838 flags rw-
private flags = 0: [APCS-32] [FPA float format]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001900  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00002eee  00001900  00001900  00009900  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000018  40000000  000047f0  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00002838  40000018  40000018  00010018  2**2
                  ALLOC
  4 .comment      0000005a  00000000  00000000  00010018  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00010072  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000385  00000000  00000000  00010112  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000c75  00000000  00000000  00010497  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000407  00000000  00000000  0001110c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000031a  00000000  00000000  00011513  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000408  00000000  00000000  00011830  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000003aa  00000000  00000000  00011c38  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 
00001900 l    d  .rodata	00000000 
40000000 l    d  .data	00000000 
40000018 l    d  .bss	00000000 
00000000 l    d  .comment	00000000 
00000000 l    d  .debug_aranges	00000000 
00000000 l    d  .debug_pubnames	00000000 
00000000 l    d  .debug_info	00000000 
00000000 l    d  .debug_abbrev	00000000 
00000000 l    d  .debug_line	00000000 
00000000 l    d  .debug_frame	00000000 
00000000 l    d  .debug_str	00000000 
00000000 l    d  *ABS*	00000000 
00000000 l    d  *ABS*	00000000 
00000000 l    d  *ABS*	00000000 
00000000 l     F .text	00000000 $a
00000024 l       .text	00000000 reset
000000f8 l       .text	00000000 loop
00000020 l       .text	00000000 fiq_addr
00000020 l     O .text	00000000 $d
00000024 l     F .text	00000000 $a
00000100 l       .text	00000000 PLLBASE
00000024 l       *ABS*	00000000 PLLCFG_VALUE
00000004 l       *ABS*	00000000 PLLCFG_OFFSET
00000001 l       *ABS*	00000000 PLLCON_PLLE
00000000 l       *ABS*	00000000 PLLCON_OFFSET
000000aa l       *ABS*	00000000 PLLFEED1
00000055 l       *ABS*	00000000 PLLFEED2
0000000c l       *ABS*	00000000 PLLFEED_OFFSET
00000048 l       .text	00000000 pll_loop
00000008 l       *ABS*	00000000 PLLSTAT_OFFSET
00000400 l       *ABS*	00000000 PLLSTAT_PLOCK
00000002 l       *ABS*	00000000 PLLCON_PLLC
00000064 l       .text	00000000 mam_init
00000104 l       .text	00000000 MAMBASE
00000002 l       *ABS*	00000000 MAMCR_VALUE
00000000 l       *ABS*	00000000 MAMCR_OFFSET
00000004 l       *ABS*	00000000 MAMTIM_VALUE
00000004 l       *ABS*	00000000 MAMTIM_OFFSET
00000078 l       .text	00000000 stacks_init
000000fc l       .text	00000000 STACK_START
00000011 l       *ABS*	00000000 FIQ_MODE
00000080 l       *ABS*	00000000 IRQ_DISABLE
00000040 l       *ABS*	00000000 FIQ_DISABLE
00000080 l       *ABS*	00000000 FIQ_STACK_SIZE
00000012 l       *ABS*	00000000 IRQ_MODE
00000080 l       *ABS*	00000000 IRQ_STACK_SIZE
00000013 l       *ABS*	00000000 SVC_MODE
00000080 l       *ABS*	00000000 SVC_STACK_SIZE
0000001b l       *ABS*	00000000 UND_MODE
00000010 l       *ABS*	00000000 UND_STACK_SIZE
00000017 l       *ABS*	00000000 ABT_MODE
00000010 l       *ABS*	00000000 ABT_STACK_SIZE
0000001f l       *ABS*	00000000 SYS_MODE
000000c0 l       .text	00000000 runtime_init
00000108 l       .text	00000000 data_source
0000010c l       .text	00000000 data_start
00000110 l       .text	00000000 data_end
000000cc l       .text	00000000 copy_data
00000114 l       .text	00000000 bss_start
00000118 l       .text	00000000 bss_end
000000e8 l       .text	00000000 clear_bss
000000fc l     O .text	00000000 $d
00000400 l       *ABS*	00000000 SYS_STACK_SIZE
00000000 l    df *ABS*	00000000 main.c
0000011c l     F .text	00000000 $a
0000055c l     O .text	00000000 $d
00000560 l     F .text	00000000 $a
00000000 l    df *ABS*	00000000 video.c
40000018 l     O .bss	00000000 $d
40000020 l       .bss	00000000 pixelCount
40000000 l     O .data	00000000 $d
000005b8 l     F .text	00000000 $a
000007c8 l     O .text	00000000 $d
000007f0 l     F .text	000003bc timer0ISR
000007cc l     F .text	00000000 $a
00000b90 l     O .text	00000000 $d
00000bac l     F .text	00000000 $a
00000d70 l     O .text	00000000 $d
00000000 l    df *ABS*	00000000 system.c
00000d7c l     F .text	00000000 $a
00001084 l     F .text	00000008 __get_cpsr
0000108c l     F .text	00000008 __set_cpsr
00000000 l    df *ABS*	00000000 graphics.c
000010d0 l     F .text	00000000 $a
0000115c l     O .text	00000000 $d
00001164 l     F .text	00000000 $a
000011ac l     O .text	00000000 $d
000011b0 l     F .text	00000000 $a
000012a8 l     O .text	00000000 $d
000012b4 l     F .text	00000000 $a
000013ac l     O .text	00000000 $d
000013b8 l     F .text	00000000 $a
000014b0 l     O .text	00000000 $d
000014bc l     F .text	00000000 $a
00001544 l     O .text	00000000 $d
00001548 l     F .text	00000000 $a
00000000 l    df *ABS*	00000000 audio.c
4000282c l     O .bss	00000000 $d
4000282c l       .bss	00000000 phaseAccum
4000283c l       .bss	00000000 phaseDelta
40000008 l     O .data	00000010 level
40000008 l     O .data	00000000 $d
00001784 l     F .text	00000000 $a
000017c4 l     O .text	00000000 $d
000017cc l     F .text	00000000 $a
000018e0 l     O .text	00000000 $d
4000002c g     O .bss	00002000 imageArray
000012b4 g     F .text	00000104 put_char_arial24
00000560 g     F .text	00000030 start_ms_timer
000010a0 g     F .text	00000030 UNDEF_Routine
000038a4 g     O .rodata	00000060 arial24Width
00001784 g     F .text	00000018 audio_init
000047f0 g       *ABS*	00000000 _etext
00000da8 g     F .text	0000002c led_card_init
00001ae0 g     O .rodata	00000060 arial32Width
40000028 g     O .bss	00000004 soundBufW
00001c00 g     O .rodata	000015fc arial32
40000000 g     O .data	00000004 syncOn
40000004 g     O .data	00000004 syncOff
000031fc g     O .rodata	00000060 arial16Width
00000e04 g     F .text	00000030 led_card
0000109c g     F .text	00000004 SWI_Routine
00001548 g     F .text	000000f8 line
00001900 g     O .rodata	000001e0 characters
4000202c g     O .bss	00000800 soundBuf
00001b40 g     O .rodata	000000c0 arial32Offset
000007cc g     F .text	00000024 video_stop
40002850 g       *ABS*	00000000 _ebss
000017cc g     F .text	00000134 audio_fill_buf
00000590 g     F .text	00000028 ms_time
00001098 g     F .text	00000004 FIQ_Routine
00000efc g     F .text	00000028 get_char
0000325c g     O .rodata	000000c0 arial16Offset
000046ee g     O .rodata	00000100 triTable
000045ee g     O .rodata	00000100 sineTable
00001640 g     F .text	00000144 circle
40000018 g       .bss	00000000 _bss
00000000 g       .text	00000000 _start
00000d7c g     F .text	0000002c led_board_init
000014bc g     F .text	0000008c put_char_small
000010d0 g     F .text	00000094 put_pixel
000013b8 g     F .text	00000104 put_char_arial16
00003904 g     O .rodata	000000c0 arial24Offset
0000011c g     F .text	00000444 main
00000e34 g     F .text	00000068 delay_ms
00000e9c g     F .text	00000060 delay_ticks
0000331c g     O .rodata	00000588 arial16
0000101c g     F .text	00000020 feed
000039c4 g     O .rodata	00000c2a arial24
40000018 g     O .bss	00000004 lineCount
4000001c g     O .bss	00000004 imageVindex
00001094 g     F .text	00000004 IRQ_Routine
00000bac g     F .text	000001d0 fiq_handler
40000000 g       .data	00000000 _data
0000103c g     F .text	00000024 enableIRQ
00001164 g     F .text	00000004 get_pixel
40000018 g       *ABS*	00000000 _edata
40002850 g       *ABS*	00000000 _end
0000179c g     F .text	00000030 synth_voice
40000024 g     O .bss	00000004 soundBufR
00000dd4 g     F .text	00000030 led_board
00001060 g     F .text	00000024 disableIRQ
00000f24 g     F .text	000000f8 Initialize
000005b8 g     F .text	00000214 video_init
4000284c g     O .bss	00000004 sample
00001168 g     F .text	00000048 clear_screen
000011b0 g     F .text	00000104 put_char_arial32


